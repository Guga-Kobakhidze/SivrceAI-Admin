import{e as a,y as o,I as u,f as c,a as m,j as Q,i as p}from"./index-DxfvgruV.js";import{Q as I}from"./queryKeys-B_vzKx7n.js";import{u as d}from"./yup-C8f-mJP9.js";import{I as l}from"./InteriorQuestionForm-CXHIGsqv.js";import"./index.esm-hcllBIN3.js";import"./TextFieldElement-DkVV6CSv.js";import"./Delete-Bfy5QemR.js";import"./Actions-DUD2rIXS.js";import"./useInteriorQuestions-CnG3xYxV.js";const y=async({data:t})=>{try{return(await c.post(`${I.addEditInteriorQuestion}`,t)).data}catch(e){throw new Error(e||"Failed to Create question")}};function f(){const t=a(),{mutate:e,isPending:r,error:s}=d({mutationFn:y,onSuccess:()=>{o.success("Question Created Successfully"),t.invalidateQueries({queryKey:[u]})}});return{createQuestion:e,isCreating:r,createError:s}}const q=()=>{const t=m(),{createQuestion:e,createError:r,isCreating:s}=f(),n=i=>{e({data:i},{onSuccess:()=>t(p.interiorQuestionTable),onError:()=>o.error(r==null?void 0:r.message)})};return Q.jsx(l,{isLoading:s,onSubmit:n})};export{q as default};
