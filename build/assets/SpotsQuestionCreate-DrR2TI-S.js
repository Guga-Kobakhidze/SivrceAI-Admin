import{e as i,y as r,S as u,f as c,a as p,j as m,i as Q}from"./index-DxfvgruV.js";import{S}from"./SpotsQuestionForm-CeiAFKwD.js";import{Q as d}from"./queryKeys-B_vzKx7n.js";import{u as y}from"./yup-C8f-mJP9.js";import"./Actions-DUD2rIXS.js";import"./index.esm-hcllBIN3.js";import"./useSpotQuestions-CkQcE8aU.js";import"./Delete-Bfy5QemR.js";import"./TextFieldElement-DkVV6CSv.js";const f=async({data:e})=>{try{return(await c.post(`${d.addEditSpotQuestion}`,e)).data}catch(t){throw new Error(t||"Failed to Create question")}};function l(){const e=i(),{mutate:t,isPending:s,error:o}=y({mutationFn:f,onSuccess:()=>{r.success("Question Created Successfully"),e.invalidateQueries({queryKey:[u]})}});return{createQuestion:t,isCreating:s,createError:o}}const F=()=>{const e=p(),{createQuestion:t,createError:s,isCreating:o}=l(),n=a=>{t({data:a},{onSuccess:()=>e(Q.spotsQuestionTable),onError:()=>r.error(s==null?void 0:s.message)})};return m.jsx(S,{isLoading:o,onSubmit:n})};export{F as default};
